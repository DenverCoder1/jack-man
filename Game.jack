class Game {
  field Score score;
  field PacMan pacman;
  field Dots dots;
  field Walls walls;
  field Ghosts ghosts;
  field Labels labels;

  constructor Game new() {
	do Random.setSeed(Random.randomSeed()); 
  
    let walls = Walls.new();
    let dots = Dots.new();
    let pacman = PacMan.new(dots, walls);
    let score = Score.new(dots);
    let ghosts = Ghosts.new(pacman, walls);
    let labels = Labels.new();
    return this;
  }

  method void init() {
    do pacman.init();
    do walls.init();
    do dots.init();
    do score.init();
    do ghosts.init();
    do labels.init();
    return;
  }

  method void next() {
	var int key;
    if (isGameOver()) {
      do Output.moveCursor(10, 46); // row, col
      do Output.printString("Game Over");
	  
	  while (true) {
		
		let key = Keyboard.keyPressed();
		if (key = 142) {
			do newGame();
			return;
			
		}
	  }
	        
    }
    do pacman.next();
    do ghosts.next();
    do score.next();
    return;
  }

  method boolean isGameOver() {
    return pacman.getIsCaptured();
  }

  method void reset() {
    do pacman.reset();
    return;
  }

  method void handleKey(int key) {
    if (key = 81) {
      do reset();
      return;
    }
    do pacman.handleKey(key);
    return;
  }

	method void newGame() {
    do dots.dispose();
	do pacman.dispose();
	
	do score.dispose();
	do ghosts.dispose();
	do labels.dispose();
	do walls.dispose();
	do Screen.clearScreen();
	
	let walls = Walls.new();
    let dots = Dots.new();
    let pacman = PacMan.new(dots, walls);
    let score = Score.new(dots);
    let ghosts = Ghosts.new(pacman, walls);
    let labels = Labels.new();
	
	do pacman.init();
	do walls.init();
    do dots.init();
    do score.init();
    do ghosts.init();
    do labels.init();
	
    return;
  }
  method void dispose() {
	do walls.dispose();
	do dots.dispose();
	do pacman.dispose();
	do score.dispose();
	do ghosts.dispose();
	do labels.dispose();
    do Memory.deAlloc(this);
    return;
  }
}