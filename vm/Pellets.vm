function Pellets.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 17
pop this 2
push constant 12
pop this 3
push constant 175
pop this 4
push this 2
push this 3
call Math.multiply 2
pop this 0
push this 0
call Array.new 1
pop this 1
push constant 0
pop this 5
push pointer 0
call Pellets.createPellets 1
pop temp 0
push pointer 0
return
function Pellets.init 0
push argument 0
pop pointer 0
push pointer 0
call Pellets.draw 1
pop temp 0
push constant 0
return
function Pellets.createPellets 5
push argument 0
pop pointer 0
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push this 0
lt
not
if-goto WHILE_END0
push local 2
push this 2
call Math.divide 2
pop local 3
push local 2
push local 3
push this 2
call Math.multiply 2
sub
pop local 4
push this 4
push local 4
call Math.multiply 2
push constant 10
call Math.divide 2
push constant 44
add
pop local 0
push this 4
push local 3
call Math.multiply 2
push constant 10
call Math.divide 2
push constant 26
add
pop local 1
push local 2
push this 1
add
push local 0
push local 1
call Pellet.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Pellets.draw 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
call Pellet.draw 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Pellets.getCapturedCount 0
push argument 0
pop pointer 0
push this 5
return
function Pellets.setCollected 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 1
push argument 2
push argument 3
push argument 4
call Pellet.checkOverlapping 5
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call Pellet.isCollected 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 5
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
call Pellet.setCollected 1
pop temp 0
push this 5
push constant 1
add
pop this 5
label IF_FALSE2
push local 1
call Pellet.draw 1
pop temp 0
label IF_FALSE1
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Pellets.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 0
lt
not
if-goto WHILE_END0
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
call Pellet.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 1
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
